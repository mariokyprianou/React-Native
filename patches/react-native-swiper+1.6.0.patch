diff --git a/node_modules/react-native-swiper/src/index.js b/node_modules/react-native-swiper/src/index.js
index 3e63ca7..1c6cac6 100644
--- a/node_modules/react-native-swiper/src/index.js
+++ b/node_modules/react-native-swiper/src/index.js
@@ -12,7 +12,8 @@ import {
   Dimensions,
   TouchableOpacity,
   Platform,
-  ActivityIndicator
+  ActivityIndicator,
+  I18nManager,
 } from 'react-native'
 
 /**
@@ -48,7 +49,12 @@ const styles = {
     flex: 1,
     justifyContent: 'center',
     alignItems: 'center',
-    backgroundColor: 'transparent'
+    backgroundColor: 'transparent',
+ ...Platform.select({
+       android: {
+         flexDirection: I18nManager.isRTL ? 'row-reverse' : 'row'
+       }
+     })
   },
 
   pagination_y: {
@@ -60,8 +66,13 @@ const styles = {
     flex: 1,
     justifyContent: 'center',
     alignItems: 'center',
-    backgroundColor: 'transparent'
-  },
+    backgroundColor: 'transparent',
+    ...Platform.select({
+       android: {
+         flexDirection: I18nManager.isRTL ? 'row-reverse' : 'row'
+       }
+     })
+      },
 
   title: {
     height: 30,
@@ -85,7 +96,12 @@ const styles = {
     paddingHorizontal: 10,
     paddingVertical: 10,
     justifyContent: 'space-between',
-    alignItems: 'center'
+    alignItems: 'center',
+     ...Platform.select({
+       android: {
+         flexDirection: I18nManager.isRTL ? 'row-reverse' : 'row'
+       }
+     })
   },
 
   buttonText: {
@@ -258,8 +274,11 @@ export default class extends Component {
       // retain the index
       initState.index = state.index
     } else {
-      initState.index =
-        initState.total > 1 ? Math.min(props.index, initState.total - 1) : 0
+      if (Platform.OS === 'android' && I18nManager.isRTL) {
+         initState.index = initState.total > 1 ? Math.max(props.index, initState.total - 1) : 0
+       } else {
+         initState.index = initState.total > 1 ? Math.min(props.index, initState.total - 1) : 0
+       }
     }
 
     // Default: horizontal
@@ -700,14 +719,16 @@ export default class extends Component {
   renderNextButton = () => {
     let button = null
 
-    if (this.props.loop || this.state.index !== this.state.total - 1) {
-      button = this.props.nextButton || <Text style={styles.buttonText}>›</Text>
-    }
+    button = this.props.nextButton;
+
+    // if (this.props.loop || this.state.index !== this.state.total - 1) {
+    //   button = this.props.nextButton || <Text style={styles.buttonText}>›</Text>
+    // }
 
     return (
       <TouchableOpacity
         onPress={() => button !== null && this.scrollBy(1)}
-        disabled={this.props.disableNextButton}
+        disabled={this.state.index === this.state.total - 1}
       >
         <View>{button}</View>
       </TouchableOpacity>
@@ -716,15 +737,16 @@ export default class extends Component {
 
   renderPrevButton = () => {
     let button = null
+    button = this.props.prevButton
 
-    if (this.props.loop || this.state.index !== 0) {
-      button = this.props.prevButton || <Text style={styles.buttonText}>‹</Text>
-    }
+    // if (this.props.loop || this.state.index !== 0) {
+    //   button = this.props.prevButton || <Text style={styles.buttonText}>‹</Text>
+    // }
 
     return (
       <TouchableOpacity
         onPress={() => button !== null && this.scrollBy(-1)}
-        disabled={this.props.disablePrevButton}
+        disabled={this.state.index === 0}
       >
         <View>{button}</View>
       </TouchableOpacity>
@@ -778,7 +800,7 @@ export default class extends Component {
         onScrollEndDrag={this.onScrollEndDrag}
         style={this.props.scrollViewStyle}
       >
-        {pages}
+        {I18nManager.isRTL ? pages.reverse() : pages}
       </ScrollView>
     )
   }
