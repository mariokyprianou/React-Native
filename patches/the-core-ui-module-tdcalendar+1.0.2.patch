diff --git a/node_modules/the-core-ui-module-tdcalendar/src/Calendar.js b/node_modules/the-core-ui-module-tdcalendar/src/Calendar.js
index feb9794..a9ca8b2 100644
--- a/node_modules/the-core-ui-module-tdcalendar/src/Calendar.js
+++ b/node_modules/the-core-ui-module-tdcalendar/src/Calendar.js
@@ -96,7 +96,7 @@ export default function Calendar({
         titleTextStyles={monthTitleTextStyles || defaultMonthTitleTextStyles}
         calendarType={calendarType || defaultCalendarType}
         monthNames={calendarMonthNames || defaultCalendarMonthNames}
-        datesSelectable={datesSelectable || defaultDatesSelectable}
+        datesSelectable={false}
         dateCellStyles={dateCellStyles || defaultDateCellStyles}
         pillWidth={pillWidth || defaultPillWidth}
         lookupStyleTable={lookupStyleTable || defaultLookupStyleTable}
diff --git a/node_modules/the-core-ui-module-tdcalendar/src/components/CalendarGrid.js b/node_modules/the-core-ui-module-tdcalendar/src/components/CalendarGrid.js
index 4187631..4b0f06e 100644
--- a/node_modules/the-core-ui-module-tdcalendar/src/components/CalendarGrid.js
+++ b/node_modules/the-core-ui-module-tdcalendar/src/components/CalendarGrid.js
@@ -6,18 +6,36 @@
  * Copyright (c) 2020 The Distance
  */
 
-import React, { useState, useEffect } from "react";
+import React, { useState, useEffect, useRef } from "react";
 import {
   StyleSheet,
   View,
   TouchableOpacity,
   ScrollView,
   Text,
+  I18nManager, Dimensions, Platform
 } from "react-native";
 import { getDay, subMonths, getDaysInMonth } from "date-fns";
 import DateCell from "./DateCell";
 import { ScaleHook } from "react-native-design-to-component";
 
+
+const isIPhoneXSize = (dim) => dim.height === 812 || dim.width === 812;
+
+const isIPhoneXrSize = (dim) => dim.height === 896 || dim.width === 896;
+
+function isIphoneX() {
+  const dim = Dimensions.get('window');
+
+  return (
+    // This has to be iOS
+    Platform.OS === 'ios' &&
+    // Check either, iPhone X or XR
+    (isIPhoneXSize(dim) || isIPhoneXrSize(dim))
+  );
+}
+
+
 export default function CalendarGrid({
   firstDayOfWeek,
   showPrevNextDays = true,
@@ -77,6 +95,7 @@ export default function CalendarGrid({
           id: index + 1,
           date: index + 1,
           status: Object.values(day)[0],
+          showOnDemandDot: Object.values(day)[1],
         };
       });
 
@@ -116,7 +135,7 @@ export default function CalendarGrid({
     },
     calendarContainer: {
       flex: 1,
-      flexDirection: "row",
+      flexDirection: I18nManager.isRTL ? "row-reverse" : "row",
       justifyContent: "center",
       alignItems: "center",
       flexWrap: "wrap",
@@ -134,18 +153,31 @@ export default function CalendarGrid({
     },
     titleText: {
       ...titleTextStyles,
+       textAlign: "left",
     },
     spacer: {
-      height: getHeight(70),
+      height: Platform.OS === 'android' || isIphoneX() ? getHeight(310) : getHeight(280),
     },
   });
 
+
+  const ref = useRef(null);
+  const [scrollTo, setScrollTo] = useState(0);
+
+  useEffect(() => {
+    console.log(scrollTo);
+    if (allMonthsArray && allMonthsArray.length > 0 && ref.current) {
+      ref.current.scrollTo({x: 0, y: scrollTo, animated: true})
+    }
+  }, [scrollTo]);
+
+
   // ** ** ** ** ** FUNCTIONS ** ** ** ** **
   // ** ** ** ** ** RENDER ** ** ** ** **
   if (calendarType === "multiple-month") {
     return (
       <View style={styles.multipleContainer}>
-        <ScrollView>
+        <ScrollView ref={ref}>
           {allMonthsArray?.map((month) => {
             const monthNumber = new Date(Object.keys(month[0])[0]).getMonth();
             const monthName = monthNames[monthNumber];
@@ -164,11 +196,17 @@ export default function CalendarGrid({
             }
 
             const dailyData = month.map((day, index) => {
-              return { id: index + 1, status: Object.values(day)[0] };
+              return { id: index + 1, status: Object.values(day)[0], showOnDemandDot: Object.values(day)[1] };
             });
             return (
               <>
-                <View style={styles.titleContainer}>
+                <View onLayout={e => {
+                  if (!scrollTo || e.nativeEvent.layout.y > scrollTo) {
+                    setScrollTo(e.nativeEvent.layout.y);
+                  }
+                 } 
+                }
+                 style={styles.titleContainer}>
                   <Text style={styles.titleText}>
                     {monthName} {year}
                   </Text>
@@ -180,7 +218,7 @@ export default function CalendarGrid({
                     />
                   )}
                   {dailyData?.map((day) => {
-                    const { id, status } = day;
+                    const { id, status, showOnDemandDot } = day;
                     return datesSelectable ? (
                       <TouchableOpacity
                         onPress={() => handleSelect(id)}
@@ -193,6 +231,7 @@ export default function CalendarGrid({
                             status={status}
                             cellStyles={dateCellStyles}
                             lookupStyleTable={lookupStyleTable}
+                            showOnDemandDot={showOnDemandDot}
                           />
                         </View>
                       </TouchableOpacity>
@@ -206,6 +245,7 @@ export default function CalendarGrid({
                           status={status}
                           cellStyles={dateCellStyles}
                           lookupStyleTable={lookupStyleTable}
+                          showOnDemandDot={showOnDemandDot}
                         />
                       </View>
                     );
@@ -234,7 +274,7 @@ export default function CalendarGrid({
           <View style={{ width: pillWidth.width * firstDayOfSingleMonth }} />
         )}
         {monthDatesArray?.map((monthDate) => {
-          const { id, date, status } = monthDate;
+          const { id, date, status, showOnDemandDot } = monthDate;
           return datesSelectable ? (
             <TouchableOpacity
               onPress={() => handleSelect(id)}
@@ -247,6 +287,7 @@ export default function CalendarGrid({
                   status={status}
                   cellStyles={dateCellStyles}
                   lookupStyleTable={lookupStyleTable}
+                  showOnDemandDot={showOnDemandDot}
                 />
               </View>
             </TouchableOpacity>
@@ -257,6 +298,7 @@ export default function CalendarGrid({
                 status={status}
                 cellStyles={dateCellStyles}
                 lookupStyleTable={lookupStyleTable}
+                showOnDemandDot={showOnDemandDot}
               />
             </View>
           );
diff --git a/node_modules/the-core-ui-module-tdcalendar/src/components/DateCell.js b/node_modules/the-core-ui-module-tdcalendar/src/components/DateCell.js
index 9c9dad3..c710110 100644
--- a/node_modules/the-core-ui-module-tdcalendar/src/components/DateCell.js
+++ b/node_modules/the-core-ui-module-tdcalendar/src/components/DateCell.js
@@ -10,12 +10,14 @@ import React from "react";
 import { View, Text } from "react-native";
 import TDIcon from "the-core-ui-component-tdicon";
 import { ScaleHook } from "react-native-design-to-component";
+import LinearGradient from 'react-native-linear-gradient';
 
 export default function DateCell({
   date,
   status,
   cellStyles,
   lookupStyleTable,
+  showOnDemandDot
 }) {
   // ** ** ** ** ** SETUP ** ** ** ** **
   const { getWidth, fontSize } = ScaleHook();
@@ -25,6 +27,7 @@ export default function DateCell({
   const sharedStyle = {
     justifyContent: "center",
     alignItems: "center",
+    flexDirection: 'row',
     ...cellStyles,
   };
 
@@ -41,6 +44,19 @@ export default function DateCell({
       solid: true,
       color: "#ffffff",
     },
+    gradient: {
+      flex: 1,
+    },
+    showOnDemandDot: {
+      position: 'absolute',
+      justifyContent: 'flex-start',
+      alignSelf: 'flex-start',
+      height: 4,
+      width: 4,
+      borderRadius: 2,
+      marginTop: 2, 
+      backgroundColor: 'rgba(47, 132, 129, 1)'
+    }
   };
 
   const { pill, text } = lookupStyleTable[status];
@@ -49,16 +65,27 @@ export default function DateCell({
   // ** ** ** ** ** RENDER ** ** ** ** **
   return (
     <View style={{ ...sharedStyle, ...pill }}>
-      {status === "newWeekNewProgramme" ? (
-        <View style={styles.newProgramme}>
-          <Text style={text}>{date}</Text>
-          <View style={styles.iconContainer}>
-            <TDIcon input="star" inputStyle={styles.icon} />
+      {status === "NEW_PROGRAMME" || status === "NEW_WEEK" ? (
+        <LinearGradient
+          style={{...styles.gradient, ...sharedStyle, ...pill}}
+          start={{x: 0, y: 0}}
+          end={{x: 1, y: 0}}
+          colors={['rgba(116, 235, 231, 1)', 'rgba(46, 193, 187, 1)']}>
+          <View style={styles.newProgramme}>
+            <Text style={ text }>{ date }</Text>
+            { status === "NEW_PROGRAMME" && 
+              <View style={styles.iconContainer}>
+                <TDIcon input="star" inputStyle={styles.icon} />
+              </View>
+            }
           </View>
-        </View>
+        </LinearGradient>
       ) : (
         <Text style={text}>{date}</Text>
       )}
+      {showOnDemandDot &&
+        <View style={styles.showOnDemandDot}/>
+      }
     </View>
   );
 }
diff --git a/node_modules/the-core-ui-module-tdcalendar/src/components/DayList.js b/node_modules/the-core-ui-module-tdcalendar/src/components/DayList.js
index fcfd0ed..7459525 100644
--- a/node_modules/the-core-ui-module-tdcalendar/src/components/DayList.js
+++ b/node_modules/the-core-ui-module-tdcalendar/src/components/DayList.js
@@ -7,7 +7,7 @@
  */
 
 import React from "react";
-import { StyleSheet, View, Text } from "react-native";
+import { StyleSheet, View, Text, I18nManager } from "react-native";
 import { ScaleHook } from "react-native-design-to-component";
 
 export default function DayList({
@@ -22,7 +22,7 @@ export default function DayList({
   // ** ** ** ** ** STYLES ** ** ** ** **
   const styles = StyleSheet.create({
     container: {
-      flexDirection: "row",
+      flexDirection: I18nManager.isRTL ? "row-reverse" : "row",
       justifyContent: "center",
       ...containerStyles,
     },
diff --git a/node_modules/the-core-ui-module-tdcalendar/src/defaultProps/index.js b/node_modules/the-core-ui-module-tdcalendar/src/defaultProps/index.js
index ce79f6f..5ac29c8 100644
--- a/node_modules/the-core-ui-module-tdcalendar/src/defaultProps/index.js
+++ b/node_modules/the-core-ui-module-tdcalendar/src/defaultProps/index.js
@@ -82,7 +82,7 @@ export function defaultProps() {
     defaultCalendarGridStyles: { marginBottom: getHeight(14) },
     defaultMonthTitleContainerStyles: {
       marginVertical: getHeight(20),
-      marginLeft: getWidth(20),
+      marginHorizontal: getWidth(20),
     },
     defaultMonthTitleTextStyles: { fontWeight: "bold", fontSize: fontSize(14) },
     defaultCalendarType: "single-month",
diff --git a/node_modules/the-core-ui-module-tdcalendar/src/utils/index.js b/node_modules/the-core-ui-module-tdcalendar/src/utils/index.js
index 0a41de9..421e176 100644
--- a/node_modules/the-core-ui-module-tdcalendar/src/utils/index.js
+++ b/node_modules/the-core-ui-module-tdcalendar/src/utils/index.js
@@ -73,16 +73,6 @@ export function checkCellData(cellData, calendarType = "multiple-month") {
     if (typeof cell !== "object") throw new Error("Each day must be an object");
     const key = Object.keys(cell);
     const keyAsDay = getDay(new Date(key));
-    if (
-      keyAsDay !== 0 &&
-      keyAsDay !== 1 &&
-      keyAsDay !== 2 &&
-      keyAsDay !== 3 &&
-      keyAsDay !== 4 &&
-      keyAsDay !== 5 &&
-      keyAsDay !== 6
-    )
-      throw new Error("Each day's key must be a JS date string");
     const cellValue = Object.values(cell);
     if (typeof cellValue[0] !== "string")
       throw new Error("Each day's value must be a string");
